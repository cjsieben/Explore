<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>